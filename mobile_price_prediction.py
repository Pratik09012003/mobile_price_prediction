# -*- coding: utf-8 -*-
"""mobile_price_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_gn7jwAxQMOEpy66HdJGMpTPgcXMccyA
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

train=pd.read_csv(r'/content/train.csv')
test=pd.read_csv(r'/content/test.csv')

pd.set_option('display.max_rows',None)
pd.set_option('display.max_columns',None)

train.head()

test.head()

test.drop('id',axis=1,inplace=True)

test.head()

sns.countplot(train['price_range'])

train.shape,test.shape

train.isnull().sum()

train.info()

test.info()

train.describe()

train.plot(x='price_range',y='ram',kind='scatter')
plt.show()

train.plot(x='price_range',y='battery_power',kind='scatter')
plt.show()

train.plot(x='price_range',y='fc',kind='scatter')
plt.show()

train.plot(x='price_range',y='n_cores',kind='scatter')
plt.show()

import seaborn as sns
plt.figure(figsize=(20,20))
sns.heatmap(train.corr(),annot=True,cmap=plt.cm.Accent_r)
plt.show()

train.plot(kind='box',figsize=(20,10))

X = train.drop('price_range',axis=1)
y = train['price_range']

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X,y,test_size=0.1,random_state=101)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)
test = sc.transform(test)

X_train

X_test

test

from sklearn.tree import DecisionTreeClassifier
dtc = DecisionTreeClassifier()
dtc.fit(X_train , Y_train)

pred = dtc.predict(X_test)
pred

from sklearn.metrics import accuracy_score, confusion_matrix
dtc_acc = accuracy_score(pred,Y_test)
print(dtc_acc)
print(confusion_matrix(pred,Y_test))

from sklearn.svm import SVC
knn=SVC()
knn.fit(X_train,Y_train)

pred1 = knn.predict(X_test)
pred1

from sklearn.metrics import accuracy_score
svc_acc = accuracy_score(pred1,Y_test)
print(svc_acc)
print(confusion_matrix(pred1,Y_test))

from sklearn.linear_model import LogisticRegression  # its a classification
lr=LogisticRegression()
lr.fit(X_train,Y_train)

pred2 = lr.predict(X_test)
pred2

from sklearn.metrics import accuracy_score
lr_acc = accuracy_score(pred2,Y_test)
print(lr_acc)
print(confusion_matrix(pred2,Y_test))

plt.bar(x=['dtc','svc','lr'],height=[dtc_acc,svc_acc,lr_acc])
plt.xlabel("Algorithms")
plt.ylabel("Accuracy Score")
plt.show()

lr.predict(test)